# This is the main configuration file for the application.
# Syntax - HOCON: https://github.com/typesafehub/config#examples-of-hocon
# ~~~~~

# Sources
# ~~~~~

# temporary hardcoded list
sources : {
    repos : [
        "maizy/dev-setup",
        "maizy/hedGeHog",
        "maizy/scala-demo",
        "maizy/vnc-me",
        "maizy/PonyLib",
        "maizy/errserv",
        "maizy/myip",
        "maizy/WorkSprint",
        "maizy/venv-experiments",
        "maizy/giiit",
        "hhru/tortik",
        "hhru/hh-panic",
        "hhru/hive",
    ]
}

github {
    api_url = "https://api.github.com"
}


# Application settings
# ~~~~~
application : {

    # Secret key
    # ~~~~~
    # The secret key is used to secure cryptographics functions.
    # If you deploy your application to several instances be sure to use the same key!
    secret = "p:8d6@s;Dndb[aQ^yjvRGmv308R4KWk3_LRST2sMx7gxDJTNPXIaVjHVEnAjg^KS"

    # The application languages
    langs = "ru,en"
    lang.cookie = "lang"

    # Global object class
    # ~~~~~
    # Define the Global object class for this application.
    # Default to Global in the root package.
    # global = Global

    # Router
    # ~~~~~
    # Define the Router object to use for this application.
    # This router will be looked up first when the application is starting up,
    # so make sure this is the entry point.
    # Furthermore, it's assumed your route file is named properly.
    # So for an application router like `my.application.Router`,
    # you may need to define a router file `conf/my.application.routes`.
    # Default to Routes in the root package (and conf/routes)
    # router =  my.application.Routes

}

# Database configuration
# ~~~~~ 
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.user=sa
# db.default.password=""

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory .

logger: {
    # Root logger:
    root: ERROR

    # Logger used by the framework:
    play: INFO

    # Logger provided to your application:
    application: DEBUG
}
